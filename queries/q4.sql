DECLARE
    FUNCTION CALC_START_DATE(start_date DATE, hour NUMBER, minute NUMBER)
        RETURN TIMESTAMP
    AS
        result TIMESTAMP;
    BEGIN
        result:=start_date + NUMTODSINTERVAL(hour, 'HOUR') + NUMTODSINTERVAL(minute, 'MINUTE');
        return result;
    END;
BEGIN
    WITH
        ROOM_CAPACITY AS(
        SELECT ID_ROOM, ROOM_SIGN, IMAX_CAPABLE, CAPABLE_3D
        FROM ROOMS, SEATS
        GROUP BY ID_ROOM, ROOM_SIGN, IMAX_CAPABLE, CAPABLE_3D
        HAVING COUNT(DISTINCT ID_SEAT) > :required_seats
    ),
    CAPABLE_ROOMS AS (
        SELECT DISTINCT ID_ROOM, ROOM_SIGN, DURATION
        FROM MOVIES, MOVIEVERSIONS, ROOM_CAPACITY
        WHERE
            NAME = :movie_name
          AND IS_IMAX = IMAX_CAPABLE
          --AND DIMENSION = :dimension
          AND (DIMENSION = '2D' OR CAPABLE_3D = 'Y')
    ),
    ROOMS_SHOWS AS (
        SELECT
            ID_SHOW,
            FK_ROOM AS ROOM_ID,
            CALC_START_DATE(SHOW_DATE, START_HOUR, START_MINUTE) AS START_DATE,
            CALC_START_DATE(SHOW_DATE, START_HOUR, START_MINUTE) + NUMTODSINTERVAL(DURATION, 'MINUTE') AS END_DATE
        FROM SHOWS, MOVIEVERSIONS, MOVIES
        WHERE
            CALC_START_DATE(SHOW_DATE, START_HOUR, START_MINUTE) + NUMTODSINTERVAL(DURATION, 'MINUTE') > :start_timestamp
          AND CALC_START_DATE(SHOW_DATE, START_HOUR, START_MINUTE) < :end_timestamp
          AND FK_ROOM IN CAPABLE_ROOMS.ID_ROOM
    ),
    SHOW_INTERVALS AS (
        SELECT RS1.ID_SHOW, RS1.ROOM_ID, RS1.END_DATE AS BEGIN_TIME, RS2.START_DATE AS END_TIME, MIN(RS1.END_DATE - RS2.START_DATE) AS TOTAL_TIME
        FROM ROOMS_SHOWS RS1 JOIN ROOMS_SHOWS RS2 ON RS1.ROOM_ID = RS2.ROOM_ID
        WHERE RS1.END_DATE - RS2.START_DATE > 0
        GROUP BY RS1.ID_SHOW, RS1.ROOM_ID
    )
    SELECT ROOM_SIGN, BEGIN_TIME, END_TIME
    FROM CAPABLE_ROOMS JOIN SHOW_INTERVALS ON CAPABLE_ROOMS.ID_ROOM = SHOW_INTERVALS.ROOM_ID
    WHERE TOTAL_TIME > DURATION;
END;